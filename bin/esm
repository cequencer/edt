#!/usr/bin/env node
const fs = require('fs');
const parseArgs = require('minimist');
const ethereum = require('ethereumjs-lib');
const Trie = ethereum.Trie;
const dep = require('../lib/dependant.js');
const columnify = require('columnify');

var argv = parseArgs(process.argv.slice(2), {
  boolean: ['h', 'init'],
  string: ['path', 'root'],
  alias: {
    'path': 'p',
    'help': 'h',
    'cpp': 'c',
    'node': 'n'
  }
});

var usageStr = 'USAGE: esm <command> [OPTION] \n\
The Ethereum State Manager (esm) allows you to export the currect state of \n\
ethereum in json \n\n';

var commands = [{
  command: 'export',
  description: 'exports the state in json format'
}];
var options = [{
  option: '-p',
  alias: '--path',
  description: 'The location to the folder which has the state db'
}, {
  option: '-c',
  alias: '--cpp',
  description: 'dumps Alethzero\'s state'
}, {
  option: '-n',
  alias: '--node',
  description: 'dumps node-ethereum\'s state'
}];

//set the path
dep.path(argv);

switch (argv._[0]) {

  case 'init':
    console.log('initializing state db');
    fs.mkdir(__dirname + '/.ethereum', function() {});
    break;

  case 'export':

    var stateDB = dep.getDB('state', argv);
    var state = new Trie(stateDB);

    require('../lib/export.js')(argv, state, stateDB);

    break;

  case 'import':
    require('../lib/import.js')(argv);
    break;

  case 'commit':
    require('../lib/commit.js')(argv);
    break;

  case 'checkout':
    require('../lib/checkout.js')(argv);
    break;

  case 'log':
    require('../lib/log.js')(argv);
    break;

  case 'account':
    require('../lib/account.js')(argv);
    break;

  case 'status':
    require('../lib/status.js')(argv);
    break;

  case 'help':
  default:
   console.log(
      usageStr +
      columnify(commands) + '\n\n' +
      columnify(options)
    );
    process.exit();
}
